指针数组 指针数组的本质是一个数组，其返回值为所存指针的地址 
类型 *数组名 [数组元素个数]
int *p [n]={};

数组指针 数组指针的本质是一个指针，其返回值为整个数组的首地址
类型 (*数组名) [数组元素个数]
int (*p)[n]={};

指针数组：

一、定义与初始化
1.int *p[3];p[0]=a;p[1]=b;p[2]=c;
2.int *p[3]={a,b,c};
3.char *p[3]={"tmp","mpt","pmt"};

数组指针：

一、初始化
1.int (*p)[N]=&array  一维数组 
2.int (*p)[N]=array   二维数组 

二、游历数组
1.*(*p+i)      一维数组 
2.*(*(p+i)+j)  二维数组 

二维数组是由多个连续的一维数组构成 
array[M][N] 的类型是 int (*p)[N] 

p=&array 指的是整个数组的首地址 +1，指加整个数组的长度，跳到下一个连续的一维数组 
*p=array 指的是数组首元素的地址 +1，指加首元素的长度，跳到下一个元素 
**p=array[0] 指的是数组首元素的值  

三、分析 
1.*(*p+i)  一维数组 
*p=array 指当前一维数组的首元素地址 
*p+i=array+i 指加上i个array首元素的长度，跳到第i个元素  
*(*p+i)=*(array+i) 用取址符取地址 

2.*(*(p+i)+j)  二维数组 
p+i=&(array+i) 指加上i个array数组的长度，跳到第i个连续的一维数组
*(p+i)=array+i 指第i个连续一维数组的首元素地址 
*(p+i)+j=*(array+i)+j 指加上j个array+i首元素的长度，跳到第j个元素 
*(*(p+i)+j) 用取址符取地址 
